<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sns.dao.FilePostMapper">
	<!-- file_id 저장 -->
	<insert id="saveFileId">
		insert into file_post
		(link_id, file_id)
		values
		(#{link_id}, #{file_id})
	</insert>
	
	<!-- post_id 저장 -->
	<update id="addPostId">
		update file_post set post_id = #{post_id}, is_using = true, create_at = now()
		where link_id = #{link_id}
	</update>
	
	<!-- 모든 게시글 리스트 확인(file_post) -->
	<select id="selectAllList" resultType="com.sns.dto.FilePostDto">
		SELECT * FROM file_post
		WHERE is_using = true
		ORDER BY create_at DESC
	</select>
	
	<!-- 특정 게시물 하나의 FilePost 데이터 반환 -->
	<select id="selectOne" resultType="com.sns.dto.FilePostDto">
		select * from file_post where link_id = #{link_id}
	</select>
	
	<!-- 모든 게시물의 상세 정보 목록 반환 -->
	<select id="selectAllPost" resultType="com.sns.dto.JoinFilePostDto">
		SELECT p.post_id AS post_id, p.content, p.create_at, f.file_id AS file_id, f.up_filename, f.file_path, f.latitude, f.longitude, fp.link_id AS link_id, u.tag_id AS tag_id
		FROM post p
		LEFT JOIN file_post fp ON p.post_id = fp.post_id
		LEFT JOIN file_list f ON fp.file_id = f.file_id
		LEFT JOIN user u ON p.write_user = u.uuid
		WHERE fp.is_using = true AND p.is_using = true
		ORDER BY fp.create_at DESC
	</select>
	
	<!-- 업로드 한 지 12시간 전까지의 게시물 상세 정보 목록 반환 -->
	<select id="selectTimePostList" resultType="com.sns.dto.JoinFilePostDto">
		SELECT p.post_id AS post_id, p.content, p.create_at, f.file_id AS file_id, f.up_filename, f.file_path, f.latitude, f.longitude, fp.link_id AS link_id, u.tag_id AS tag_id
		FROM post p
		LEFT JOIN file_post fp ON p.post_id = fp.post_id
		LEFT JOIN file_list f ON fp.file_id = f.file_id
		LEFT JOIN user u ON p.write_user = u.uuid
		WHERE fp.is_using = true AND p.is_using = true AND fp.create_at > DATE_SUB(now(), INTERVAL 12 hour)
		ORDER BY fp.create_at DESC
	</select>
	
	<!-- 특정 게시물 상세 정보 반환 -->
	<select id="selectOnePost" resultType="com.sns.dto.JoinFilePostDto">
		SELECT p.post_id AS post_id, p.content, p.create_at, p.write_user, f.file_id AS file_id, f.up_filename, f.file_path, fp.link_id AS link_id, u.tag_id AS tag_id
		FROM post p
		LEFT JOIN file_post fp ON p.post_id = fp.post_id
		LEFT JOIN file_list f ON fp.file_id = f.file_id
		LEFT JOIN user u ON p.write_user = u.uuid
		WHERE fp.link_id = #{link_id}
	</select>
	
	<!-- 특정 사용자의 게시글 목록 갯수 반환 -->
	<select id="selectUserUpCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM file_post fp
		LEFT JOIN post p ON p.post_id = fp.post_id
		WHERE p.write_user = #{uuid} AND fp.is_using = 1
	</select>
	
	<!-- 특정 사용자의 게시글 목록 반환 -->
	<select id="selectChoiceList" resultType="com.sns.dto.JoinFilePostDto">
		SELECT p.post_id AS post_id, p.content, p.create_at, f.file_id AS file_id, f.up_filename, f.file_path, fp.link_id AS link_id, u.tag_id AS tag_id
		FROM post p
		LEFT JOIN file_post fp ON p.post_id = fp.post_id
		LEFT JOIN file_list f ON fp.file_id = f.file_id
		LEFT JOIN user u ON p.write_user = u.uuid
		WHERE p.write_user = #{uuid} AND fp.is_using = 1
		ORDER BY p.create_at DESC
	</select>
	
	<!-- 특정 단어가 들어간 게시글 목록 반환 -->
	<select id="selectSearchList" resultType="com.sns.dto.JoinFilePostDto">
		SELECT p.post_id AS post_id, p.content, p.create_at, f.file_id AS file_id, f.up_filename, f.file_path, fp.link_id AS link_id, u.tag_id AS tag_id
		FROM post p
		LEFT JOIN file_post fp ON p.post_id = fp.post_id
		LEFT JOIN file_list f ON fp.file_id = f.file_id
		LEFT JOIN user u ON p.write_user = u.uuid
		WHERE p.content LIKE CONCAT("%", #{keyword}, "%")
		AND fp.is_using = 1
		ORDER BY p.create_at DESC
	</select>
	
	<!-- 게시글 비활성화 -->
	<update id="mtdUsingStatusFalse">
		UPDATE file_post SET is_using = false WHERE link_id = #{link_id}
	</update>
	
	<!-- 게시글 활성화 -->
	<update id="mtdUsingStatusTrue">
		UPDATE file_post SET is_using = true WHERE link_id = #{link_id}
	</update>
</mapper>